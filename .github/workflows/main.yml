# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    strategy:
      matrix:
        config:
          - arch: 32
            choco_opts: "--forceX86"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Install dependencies
        run: |
          $JACK_VERSION="v1.9.19"
          echo "Downloading Jack win${{ matrix.config.arch }} $JACK_VERSION ..."
          $exePath = "$($env:TEMP)\jack2_installer.exe"
          (New-Object Net.WebClient).DownloadFile("https://github.com/jackaudio/jack2-releases/releases/download/$JACK_VERSION/jack2-win${{ matrix.config.arch }}-$JACK_VERSION.exe", $exePath)
          echo "Installing..."
          cmd /c start /wait $exePath /SILENT /NORESTART /NOICONS /TYPE=full
          echo "Done installing Jack win${{ matrix.config.arch }} $JACK_VERSION"
          
          choco install qt5-default ${{ matrix.config.choco_opts }}
          choco install mingw --force --version=8.1.0 ${{ matrix.config.choco_opts }} 

      # Runs a set of commands using the runners shell
      - name: Build
        run: |
          $env:CC="gcc.exe"
          $env:CXX="g++.exe"
          $env:PATH="C:\msys64\mingw${{ matrix.config.arch }}\bin;$env:PATH"
          git submodule -q update --init --recursive
          mkdir build
          echo $env:PATH
          ls -Recurse C:\msys64
          cmake -S . -B build "-GMinGW Makefiles" "-DCMAKE_PREFIX_PATH=C:\Qt\5.15.2\mingw81_${{ matrix.config.arch }}\lib\cmake\Qt5"
          cmake --build build --target package --config RelWithDebInfo -- -j4

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          # Artifact name
          name: "artifact" # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: build/**/*.zip
